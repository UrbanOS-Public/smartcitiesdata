{{- if .Values.adminDeploy }}

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ .Values.prometheus.server.useExistingClusterRoleName }}"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ .Values.prometheus.server.useExistingClusterRoleName }}"
subjects:
  - kind: ServiceAccount
    name: "{{ .Values.prometheus.serviceAccounts.server.name }}"
    namespace: "{{ index .Values.prometheus.server.namespaces 0 }}"

{{- end }}
