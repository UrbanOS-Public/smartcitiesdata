name: version_checker
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  check-apps-for-update:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Elixir
        uses: actions/setup-elixir@v1.5.0
        with:
          elixir-version: 1.9
          otp-version: 22.2
          experimental-otp: true
          runs-on: ubuntu-latest
      - name: Get dependencies
        run: |
          bash scripts/gh-action-get-deps.sh
      - name: Git Stuff
        id: git
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/* 
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Check App versions
        run: |
          export MESSAGE=$(bash scripts/gh-action-check-version.sh)
          if [ -z "${MESSAGE}" ]; then
            echo "No app changes detected"
            exit 0
          else
            echo -e "${MESSAGE}"
            exit 1
          fi
          # echo -e "${MESSAGE:-No app changes detected}" > comment-updates.txt
        id: differ
      - if: github.ref == 'refs/heads/master'
        name: Report Status Master
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
          mention_groups: "SAZ94GDB8,!channel"
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      - if: github.ref != 'refs/heads/master'
        name: Report Status PR
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> for branch {branch}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      # - name: Comment PR
      #   uses: marocchino/sticky-pull-request-comment@v1
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     path: comment-updates.txt
