---
version: '3.4'
services:
  init:
    image: alpine:3.16.0
    volumes:
      - ${PWD}/test:/workdir
      - minio:/minio
    entrypoint: /workdir/setup.sh
  metastore:
    image: quay.io/cloudservices/ubi-hive:3.1.2-metastore-008
    depends_on:
    - postgres
    - minio
    ports:
    - "8000:8000"
    environment:
      HOSTNAME: localhost
      S3_HOST: minio
      S3_PORT: 9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET: minioadmin
      S3_BUCKET_NAME: trino-hive-storage
      S3_BUCKET_PATH: hive-s3
      DATABASE_USER: hive
      DATABASE_PASSWORD: password123
      POSTGRES_SQL_SERVICE_HOST: postgres
      POSTGRES_SQL_SERVICE_PORT: 5432
      DATABASE_NAME: metastore

  postgres:
    image: smartcitiesdata/postgres-testo:0.9.12
    ports:
      - "5455:5432"
  ecto-postgres:
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: discovery_api_test
    ports:
      - "5456:5432"
  minio:
    image: minio/minio:RELEASE.2022-07-17T15-43-14Z.fips
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    ports:
    - "9000:9000"
    - "9001:9001"
    depends_on:
      - init
  presto:
    depends_on:
    - metastore
    - minio
    image: trinodb/trino:389
    ports:
    - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/v1/info | grep -q '\"starting\":false'"]
      interval: 10s
      timeout: 30s
      retries: 10
    volumes:
      - ${PWD}/test/hive.properties:/etc/trino/catalog/hive.properties

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    image: bitnami/kafka:3.1.2
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    environment:
    - "KAFKA_ADVERTISED_LISTENERS=INSIDE://:9094,OUTSIDE://${HOST_IP:-localhost}:9092"
    - "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
    - "KAFKA_LISTENERS=INSIDE://:9094,OUTSIDE://:9092"
    - "KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE"
    - "KAFKA_CREATE_TOPICS=event-stream:1:1,streaming-transformed:1:1,dead-letters:1:1,streaming-persisted:1:1"
    - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
    - "ALLOW_PLAINTEXT_LISTENER=yes"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"]
      interval: 10s
      timeout: 20s
      retries: 3

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  elasticsearch:
    image: elasticsearch:7.4.2
    ports:
    - "9200:9200"
    - "9300:9300"
    environment:
    - "discovery.type=single-node"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail 'http://localhost:9200/_cluster/health?wait_for_status=green&timeout=5s'"]
      interval: 10s
      timeout: 10s
      retries: 10

volumes:
  minio:
